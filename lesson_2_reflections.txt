hat happens when you initialize a repository? Why do you need to do it?
	Git creates metadata to track the files within the repository.  To set up your location as part of version control.

How is the staging area different from the working directory and repository?  What value do you think it offers?
	The staging area is a logical holding place for new files that can be committed to the repository while the working
	directory is physical location of where your files are stored.  It shows the files that will be committed to the
	repository.

How can you use the staging area to make sure you have one commit per logical change?
       By using GIT commands diff and status to verify what files have been modified and have been staged for commit so 
       you can verify that you only have one logical change per commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
       Adding new features or experimenting with code.  It allows you to make changes without affecting the current branch.

How do the diagrams help you visualize the branch structure?
	They help to visually see where the changes are and how they relate to one another and make it easier to see the
	commits within each branch.

What is the result of merging two branches together? WHy do we represent it in the diagram the way we do?
	The result is having one new branch that contains the changes from both branches.  We represent it that way
	because you can still get to all the commits from the original branches.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
	Pros: Don't have to manually review the changes and find the conflicts
	Cons: none