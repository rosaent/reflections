How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It quickly pointed out the differences within the 2 files instead of having to read and compare each line of code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

 It allows you to revert back to prior versions if you break something as you make changes therfore not requiring you to remember every change that was made and having to recreate the previous files.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Can determine when it logically makes sense to save

    Cons: Save occur at non-logical break points
    		Could potentially make the commit too large 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    So files that have an association to each other can be grouped together.

How can you use the commands git log and git diff to view the history of files?

    FUse git log to see all the commits that have been made and use git diff to compare them to one another to see what was changed.

How might using version control make you more confident to make changes that
could break something?

    Because you know you have a backup of a previous version that you can always revert back to.

Now that you have your workspace set up, what do you want to try using Git for?

    All my upcoming projects.
